---
import MetaHead from "@components/Head.astro";
import Navigation from "@components/Navigation.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "@src/consts";
---

<script>
    import * as THREE from "three";
    import { GLTFLoader } from "three/addons/loaders/GLTFLoader.js";

    document.addEventListener("DOMContentLoaded", () => {
        const scene = new THREE.Scene();

        // set canvas dimensions
        let canvasWidth = window.innerWidth;
        let canvasHeight = window.innerHeight - 100;

        // set perspective camera
        const camera = new THREE.PerspectiveCamera(50, canvasWidth / canvasHeight, 0.1, 1000);
        camera.position.set(8, 8, 8);
        camera.lookAt(0, 0, 0);

        // set lighting
        const directionalLight = new THREE.DirectionalLight(0xffffff, 0.6);
        directionalLight.position.set(5, 10, 0);
        scene.add(directionalLight);

        const light = new THREE.AmbientLight(0xffffff, 0.1);
        scene.add(light);

        // render canvas
        const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });
        renderer.setSize(canvasWidth, canvasHeight);
        document.body.appendChild(renderer.domElement);

        // import 90s_computer.glb
        // https://sketchfab.com/3d-models/90s-computer-c5e4fed8e05e41719165148e4bcf6795
        const loader = new GLTFLoader();
        loader.load("/90s_computer.glb", function (gltf) {
            let model = gltf.scene;
            model.rotation.set(0.25, 0, 0);
            scene.add(gltf.scene);

            function animate() {
                requestAnimationFrame(animate);
                if (model) {
                    model.rotation.y += 0.002;
                }
                renderer.render(scene, camera);
            }
            animate();
        });

        // handle window resizing
        window.addEventListener("resize", () => {
            canvasWidth = window.innerWidth;
            canvasHeight = window.innerHeight - 100;
            camera.aspect = canvasWidth / canvasHeight;
            camera.updateProjectionMatrix();
            renderer.setSize(canvasWidth, canvasHeight);
        });
    });
</script>

<html lang="en">
    <head>
        <MetaHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    </head>

    <body>
        <Navigation />
    </body>
</html>

<style lang="scss">
    @use "@styles/global";
    @use "@styles/landing";

    body {
        overflow: hidden;
    }
</style>
